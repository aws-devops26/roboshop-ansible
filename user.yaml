- name: user
  hosts: user
  become: yes
  tasks:
  - name: disable old js and enable nodejs:18
    ansible.builtin.shell: dnf module disable nodejs -y; dnf module enable nodejs:18 -y

  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: creating user roboshop
    ansible.builtin.user:
      name: roboshop

  - name: creating app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download user application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: extract user application
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes

  - name: download dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy user service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: demon reload and start
    ansible.builtin.systemd_service:
      daemon_reload: true

  # lets start after the data is loaded

  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: get the users count
    ansible.builtin.command: mongo --host mongodb.awssrivalli.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: user_count

  - name: print the count
    ansible.builtin.debug:
      msg: " users count : {{user_count}}"

  - name: load user data
    ansible.builtin.command: mongodb.awssrivalli.online < /app/schema/user.js
    when: user_count.stdout == "0"

  - name: start and enable user
    ansible.builtin.service:
      name: user
      state: restarted
      enabled: yes

