- name: user
  hosts: user
  become: yes
  tasks:

  - name: disable old node js and enable nodejs 18
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: Recursively remove app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download user application
    ansible.builtin.get_url: 
     url: https://roboshop-builds.s3.amazonaws.com/user.zip
     dest: /tmp
     

  - name: extract user application
    ansible.builtin.unarchive:
     src : /tmp/user.zip
     dest: /app
     remote_src: yes

  - name: install dependencies
    ansible.builtin.command:
      args:
        chdir: /app

  - name: copy user service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: deamon reload and start
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: copy mongodb repo
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongodb.repo    

  - name: install mongodb
    ansible.builtin.package:
     name: mongodb-org-shell
     state: present

  - name: get the user count
    ansible.builtin.command: mongo --host mongodb.awssrivalli.online --quiet --eval 'db=db.getsibilingDB("user"); db.products.count()'
    register: user_count

  - name: load user data
    ansible.builtin.command: mongo --host mongodb.awssrivalli.online < /app/schema/user.js
      when: product_count.stdout == "0"

  - name: start and enable user
    ansible.builtin.service:
      name: user
      state: restarted
      enabled: yes
